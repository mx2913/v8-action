#===================================================
# Description: Build v8 enginer using GitHub Actions
# Author: t1an5t
#===================================================


name: BUILD v8

on:
  push:
    branches: [ master ]
  # watch:
  #   types: started

env:
  PATCH_FLAG: true
  COMMIT: 8ab91836885699b9ef686c3a30df4778501ef7d1
  DEPOT_UPLOAD: true
  SRC_UPLOAD: true
  BINARY_UPLOAD: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id 	
    
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    # init ubuntu1804 environment
    - name: init env
      run: |
        echo "Starting init env...\n"
        sudo apt-get update
        sudo apt-get -y install pkg-config git subversion curl wget build-essential python xz-utils zip p7zip-full
        echo "Init env success; \n"
    
    # get depot_tools
    - name: depot_tools
      run: |
        echo "Install depot_tools\n"
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo export PATH=\"\$PATH:`pwd`/depot_tools/\" >> ~/.bash_profile
        echo "Install success; \n"
    
    # fetch v8 source code
    - name: fetch v8
      run: |
        echo "fetch v8 source form google source site ...\n"
        source ~/.bash_profile
        fetch v8
        cd v8
        echo "fetch v8 source success!\n"
    
    # patch source code
    - name: patch v8
      if: env.PATCH_FLAG == 'true' && !cancelled()
      run: |
        echo "patch v8"
        cd v8
        git reset --hard $COMMIT
        cd ..
        
    - name: build v8
      run: |
        echo "build v8"
        source ~/.bash_profile
        gclient sync -f
    
    # compress this file
    - name: zip depot_tools
      if: env.DEPOT_UPLOAD == 'true' && !cancelled()
      run: |
        echo "packaging depot_tools to zip file"
        zip -q -r depot_tools.zip depot_tools
        
    # 7zip v8 src
    - name: 7zip v8_src
      run: |
        echo "packaging v8 source to zip file"
        zip -q -r v8.zip v8
        7z a v8.7z ./v8.zip -v2048m
    
    # upload depot_tools.zip to cowtransfer
    - name: upload depot_tools
      if: env.DEPOT_UPLOAD == 'true' && !cancelled()
      run: |
        echo "upload depot_tools file"
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress depot_tools.zip 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
   
    # upload v8.zip to cowtransfer
    - name: upload v8_src
      if: env.SRC_UPLOAD == 'true' && !cancelled()
      run: |
        echo "upload v8 source file"
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress v8.7z.001 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        ./transfer cow --block 2621440 -s -p 64 --no-progress v8.7z.002 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
